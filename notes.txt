#################### 1 ####################
Start with Django with platzi course
#################### 1 ####################

1. we need to create a development environment

for windows:
    1.1. py -m venv ven
    1.2. .\Scripts\activate

for linux:
    1.1. python3 -m venv venv
    1.2. source venv/bin/activate

2. Install Django framework:
    2. pip install django

3. Create a project with django:
    3. django-admin startproject project_name

4. Inicialize git and use "touch" to avoid push .venv folder to the github repository
    4.1. git init
    4.2. touch .gitignore

5. Run server (we need to be into the app folder):
    5. py manage.py runserver

6. Project and apps in Django:
    Django names project like a container of multiples apps, one app is just functionality of our project:
    Example:
    Instagram = Project
    Feed = app
    Stories = app
    Messages = app

7. To create a new app into a our project, we need to type the next code in our terminal
    7.1 Into a project folder: py manage.py startapp name_of_the_app
    7.2 Don't forget we need to include this new app into the settings.py file (project folder), in the section "INSTALLED_APPS", it must be aim to apps.py of each app folder.

8. For each app, we need to define its urls.py file wherein it includes throghout path() function. 
    Also, we have to include the path of our new urls.py file for each app into our main urls.py 
    file (main directory)

9. ORM = Object Relational Mapping. We use this method to transform tables of our databases to OOP structure in Django. So, we create models of our tables.

    9.1 We create into "models.py" file into our app, the classes related to each table. Don't forget to see how we specify the data-types for each attribute (attribute = fields of our table). Peed how we relate primary keys with foreign key. Also, check how we don't create a attribute with "id" field, because Django establishes that automatically.

    9.2 When we already create the classes, we need to execute the next code in the terminal:
        9.2.1 py manage.py makemigrations app_name: This code create a new folder into the app folder, named "migrations" and file "0001_initial.py". This code execute the ORM method.

        9.2.2 py manage.py migrate: this code apply and execute the file named "0001_initial.py" wherein we can see the model structure of our classes or tables. Now, this file is executed in the database choiced (this case, sqlite3). 





